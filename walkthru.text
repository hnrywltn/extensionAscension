
create user and DB
CREATE USER ea_app WITH PASSWORD 'password' CREATEDB;
CREATE DATABASE ea WITH OWNER ea_app;



create models and migrations
_____________________________________
User
npx sequelize-cli model:generate --name User --attributes name:string,userName:string,email:string,password:string,productId:integer,profileImg:string,bio:text

Comment
npx sequelize-cli model:generate --name Comment --attributes productId:integer,userId:integer,body:text

Product
npx sequelize-cli model:generate --name Product --attributes name:string,comments:string,imgUrl:string,productUrl:string,categoryId:integer,creatorName:string,description:text,userId:integer

Category
npx sequelize-cli model:generate --name Category --attributes name:string



migrate
npx dotenv sequelize db:migrate

set up migration files in correct order
made model associations

////////DAY ONE///////////
//make utils file


//make view files
    //
    // user/register path
    // user/log-in
    //


//implement auth
    //import bcrypt
    //import our db

//create userValidator array to use in the user regsitration POST route

//POST route
    //needs to use asyncHandler and be an async function
    //destructure from the req.body
    //build a user object
    //create an errors array
    //if errors array is empty, hash the password and add user to the db
    //if errors array contains errors, display the errors on the user-register page
        //pass the title, user object, errors array, and csrfToken to the pug file

//Update the pug file to include the errors array so registration errors can be rendered on the page


////////DAY TWO - Proposed Tos///////////

//create login routes

    //router.get('/log-in')

    //router.post('/log-in')

//create login pug files

//create logout routes

    In utils.js file?:

        const logoutUser = (req, res) => {
            delete req.session.auth;
        };

    In logout route:

        router.post('/user/logout', (req, res) => {
            logoutUser(req, res);
            res.redirect('/');
        });

//create the demo user
    //pofile image
    //existing extensions
    //bio
    //hard-code info for a specific user (Alec's suggestion)
    //have a demo button that will link to the hard-coded user

//error handler handling

//seed the database with our ten selected extensions

//search functionality

////////Still To Do///////////

//create products page pug file

//design nav bar in pug file

//create add product/extension routes

//create delete product/extension routes

//complete styling

//if possible, add up vote functionality (join table)

//practice presenting! :)

////////Presentation Points///////////








seed
npx dotenv sequelize db:seed:all
